                                               1.  STATIC -1 HAZARD in Y= A_bar.B + AC
                                                
          ----------------------------DESIGN ------------------------------
          module test(a,b,c,y,not_a,w1,w2);
  input a,b,c;
  output y;
  
inout not_a,w1,w2;
  
  not #2 G1(not_a,a);
  and #4 G2(w1,not_a,b);and #8 G3(w2,a,c);
  or  G4(y,w1,w2);
  
endmodule
         ---------------------TESTBENCH----------------------
         module tb;
  
  wire y,not_a,w1,w2 ; reg a,b,c;
  
  test DUT(.a(a),.b(b),.c(c),.y(y),.not_a(not_a),.w1(w1),.w2(w2));  
  initial
    begin              
    $dumpfile("dump.vcd");
    $dumpvars(1);
          a=0;b=1; c=1; 
      #10 a=1;b=1;c=1;
      #10 a=0;b=1;c=1;
      #10 a=1;b=1;c=1;
    end      
 
initial #40 $finish;  
endmodule

                                             2.  STATIC -0 HAZARD in Y= (A + B)( A_bar + C)
                                             ----------------------------DESIGN ------------------------------
                                             
module test(a,b,c,y,not_a,w1,w2);
  input a,b,c;
  output y;
  
inout not_a,w1,w2;
  
  not #2 G1(not_a,a);
  or #4 G2(w1,not_a,c);or #2 G3(w2,a,b);
  and  G4(y,w1,w2);
  
endmodule

                                         ---------------------TESTBENCH----------------------
                                         
module tb;
  
  wire y,not_a,w1,w2 ; reg a,b,c;
  
  test DUT(.a(a),.b(b),.c(c),.y(y),.not_a(not_a),.w1(w1),.w2(w2));

  
  initial
    begin    
          
    $dumpfile("dump.vcd");
    $dumpvars(1);
          a=0;b=0; c=0; 
      #10 a=1;b=0;c=0;
      #10 a=0;b=0;c=0;
      #10 a=1;b=0;c=0;
    end
      
 
initial #40 $finish;
  
endmodule

                                    3. DYNAMIC HAZARD Y=(W + X)(Y + X_bar) + (X_bar . W_bar . Z)
                                    ----------------------------DESIGN ------------------------------
                                    

module test(w,x,y,z,f,not_x,w1,w2,w3,w4);
  
  input w,x,z,y;
  output f;
  
inout not_x,w1,w2,w3,w4;
  
  not  G1(not_x,x);
  or #4 G2(w1,w,x);or #8 G3(w2,y,not_x);
  and  G4(w3,not_x,~w,z);and G5(w4,w1,w2);  
  or G6(f,w4,w3);
  
endmodule

                                             
                                         ---------------------TESTBENCH----------------------
                                        
module tb;
  
  wire f,not_x,w1,w2,w3,w4 ; reg x,y,w,z;
  
  test DUT(.f(f),.x(x),.y(y),.z(z),.w(w),.not_x(not_x),.w1(w1),.w2(w2),.w3(w3),.w4(w4));

  
  initial
    begin    
          
    $dumpfile("dump.vcd");
    $dumpvars(1);
          x=0;w=0;y=0 ;z=1; 
      #10 x=1;
 
    end
      
 
initial #40 $finish;
  
endmodule
